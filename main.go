package main

import (
	"log"
	"time"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"

	"doc-generation/auth"
	"doc-generation/document" // üëà –¥–æ–±–∞–≤—å —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç
	"doc-generation/templates"
)

func main() {
	InitDB()
	defer DB.Close()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏–∫–∏ (–ø–µ—Ä–µ–¥–∞—ë–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î)
	auth.InitAuth(DB)
	templates.InitTemplates(DB)
	document.InitDocumentRepo(DB) // üëà –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª—å document

	r := gin.Default()

	// –†–∞–∑—Ä–µ—à–∞–µ–º CORS
	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"http://localhost:3000"},
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Authorization", "Content-Type"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
	auth.RegisterRoutes(r)
	templates.RegisterTemplateRoutes(r)
	document.RegisterDocumentRoutes(r) // üëà –ø–æ–¥–∫–ª—é—á–∞–µ–º document –º–∞—Ä—à—Ä—É—Ç—ã

	log.Println("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ :8080")
	if err := r.Run(":8080"); err != nil {
		log.Fatal(err)
	}
}
